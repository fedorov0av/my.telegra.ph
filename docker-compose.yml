version: "3.9"
services:
  my-telegra-ph:
    build: ./
    restart: unless-stopped
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --proxy-headers --forwarded-allow-ips=*
    expose:
      - "8000"
    volumes:
      - ./logs:/app/logs
      - ./database:/app/database
    networks:
      - docker_network
    environment:
      - DATABASE_URL=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}  # Подключение к PostgreSQL
    depends_on:
      postgres:
        condition: service_started

  celery-worker:
    build: ./
    restart: unless-stopped
    command: celery -A worker worker --loglevel=info --logfile=logs/celery.log
    depends_on:
      - my-telegra-ph
      - redis
    networks:
      - docker_network

  caddy:
    image: caddy:2.8.4
    restart: unless-stopped
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    ports:
      - "80:80"  # HTTP порт
      - "443:443"  # HTTPS порт
    networks:
      - docker_network

  postgres:
    image: postgres:13-alpine3.14
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}        # Имя пользователя PostgreSQL
      POSTGRES_PASSWORD: ${DB_PASSWORD} # Пароль пользователя
      POSTGRES_DB: ${DB_NAME}    # Имя базы данных
    ports:
      - "${DB_PORT}:${DB_PORT}"  # для Dev
    volumes:
      - ./database/postgres_data:/var/lib/postgresql/data  # Тома для хранения данных PostgreSQL
    networks:
      - docker_network

  redis:
    image: redis:7.4.2-alpine
    restart: unless-stopped
    expose:
      - "6379"
    volumes:
      - ./database/redis_data:/var/lib/redis/data
    networks:
      - docker_network

networks:
  docker_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local